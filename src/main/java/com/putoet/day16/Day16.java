package com.putoet.day16;

import java.util.List;

public class Day16 {
    private static final String INPUT = "59709275180991144553584971145772909665510077889137728108418335914621187722143" +
            "499835763391833539113913245874471724316543318206687063884235599476032241946131415288903315838365933464260" +
            "961288979081653450180693829228376307468452214424448363604272171578101049695177870848804768766855959460302" +
            "410160410252817677019061157656381257631671141130695064999297225192441065878259341014746742840736304437968" +
            "599872885714729499069286593698777113907879332554209736653679474028316464493192062972874319626623316763537" +
            "266681767610340623614648701699868901159785995894014509520642548386447251984766543776759949169049134947575" +
            "625384064448900019906754502662096668908517457172";
    private static final Pattern PATTERN =  new PatternImpl(List.of(0, 1, 0, -1));

    public static void main(String[] args) {
        FFT fft = FFTImpl.from(INPUT);
        System.out.println("Solution for part a: " + fft.apply(PATTERN, 100).toString().substring(0, 8));

        // Solved theoretically only ... takes too long to run and I have no idea for a different (more efficient) approach
//        final String longInput = INPUT.repeat(10_000);
//        fft = FFTImpl.from(longInput);
//        System.out.println("Solution for part b: " + fft.apply(PATTERN, 100).toString().substring(0, 8));
    }
}
